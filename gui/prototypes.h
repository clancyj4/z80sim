void Add_to_Log(char *str);
void build_code_cache(void);
void Code_Break(void);
void Code_Clicked(void);
void Code_UnBreak(void);
void cpu(void);
void Create_IOPort_Struct(int port);
void darken_code(int line, GtkTextTag *tag);
void disass(unsigned char **p, int adr);
void do_code_highlights(void);
void Do_Code_Reload(void);
void do_go(void);
void do_step(void);
void do_trace(char *s);
void Dump_From_Register(char dreg);
void Dump_IOPort(int port);
void dump_code_vars(void);
void dump_memory_vars(void);
void exit_io(void);
void format_memory_text(GtkTextBuffer *buffer);
void Get_File_Cancel(void);
void Get_File_Open(void);
void Get_File(void);
void get_opcodes(unsigned char **p, int len);
void highlight_code(int line, GtkTextTag *hightag);
void init_Code(GtkWidget *Main);
void init_Flags(GtkWidget *Main);
void init_IOport(void);
void init_io(void);
void init_Log(GtkWidget *Main);
void init_Memory(GtkWidget *Main);
void init_Registers(GtkWidget *Main);
void int_off(void);
void int_on(void);
void io_out(BYTE adr, BYTE data);
void IOPort_OUT(int port, BYTE data);
void Mem_Change_Addr(WORD offset);
void Mem_Clicked(void);
void mon(void);
void Scroll_Memory(int row);
void set_PC_to_selection(void);
void show_about(GtkWidget *widget);
void Show_Addr_Content(void);
void Show_All(void);
void Show_Code(BYTE *start, gboolean force);
void show_error(char *str);
void Show_Flags(void);
void Show_IOport(GtkWidget *widget);
void show_log(gboolean onoff);
void Show_Memory(WORD offset, int length, gboolean force);
void Show_Registers(void);
void Synch_Mem_Reg(void);
void Toggle_Flag(int flag);
void Update_Memory();
void Update_Registers(void);
void Zero_Registers(void);
void init_Breaks(void);
void set_reg_button(char reg);
int check_gui_break(void);
int do_break(char *s);
int do_getfile(char *);
int exatoi(char *str);
gint mem_addr_to_row(WORD addr);

void Get_Project_File(void);
void Save_Project(char *fn);
void Save_File(void);
void Get_Project_File_Cancel(void);
void Save_File_Save(void);
void Save_File_Cancel(void);
void Get_Project_File_Open(void);
void show_iowin(gboolean onoff);
void assign_in_port_to_buff(int port);
void show_breaks(gboolean onoff);
void Breaks_Clicked();
void pass_value_changed(int pv);
void Break_Clear_Break();
void clear_breakpoint(int bp);
void Dump_IOPort(int port);
void set_in_queue_buffer(int port);
void load_z80_code(char *fn);
void Read_Project(char *fn);
void darken_breaks(int line, GtkTextTag *tag);
void highlight_breaks(int line);
void Dump_IOPort(int port);

